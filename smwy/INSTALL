Building AXFunds

See doc/readme-qt.rst for instructions on building AXFunds QT,
the intended-for-end-users, nice-graphical-interface, reference
implementation of AXFunds.

See doc/build-*.txt for instructions on building axfd,
the intended-for-services, no-graphical-interface, reference
implementation of AXFunds.
-------------------------
Build ubuntu 16.04 image on AWS or 14.04 on AliCloud

please following this sequence
sudo apt-get update
#
# please be aware during installation the system will ask for
# root password.  Please remember it or the database is toasted
#
sudo apt-get install mysql-server

sudo apt-get -y install git build-essential libssl-dev libdb++-dev libboost-all-dev libqrencode-dev libminiupnpc-dev python-dev libmysqlclient-dev python-setuptools 

# prepare graphic lib for Pillow, which is needed for
# django database migration
sudo apt-get install libtiff5-dev libjpeg8-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk

sudo easy_install pip 
sudo pip install --upgrade pip


#
# install django in virtualenv
#
sudo apt-get install python-virtualenv
mkdir ~/workspace
cd ~/workspace
virtualenv django
cd django
sudo pip install django==1.11.8

# the client lib for python
sudo pip install mysql-python

sudo pip install --upgrade Pillow
sudo pip install django-mathfilters

git clone https://github.com/biz2013/xwjy.git
unzip the smwy/src/axfd.tar.gz to get axfd
at ~/workspace/django/xwjy/qb/ should be the datadir for starting axfd. Use the axf.conf underneath
please use different wallet instead of use the backup_wallet.dat
cd ~/workspace/django/xwjy/smwy/src
run ./axfd -datadir=../../qb &

### on mac for dijango 2.0 and python 3.5
choose python3 virtual env.

install mysql old version, 5.7, since connector package are not upgrade to 8.xx yet.
https://dev.mysql.com/downloads/file/?id=476953

// Delete mysql completely
https://devmarketer.io/learn/do-not-install-mysql-macos-sierra-how-to-fix/

// mysql-python doesn't work for python3. try below one:
pip install mysql-connector-python

pip install mysqlclient


# Install qrcode tools on MAC
# we need to do this to install zbar lib, the pip install will install
# a fix that prevent it to crash
brew install zbar
pip install git+https://github.com/npinchot/zbar.git
pip install qrtools

# Intall qrcode tools on Linux
# To install zbar, for debian derivative (like ubuntu), you need to install zbar's developement package, which contains the header file zbar.h
sudo apt-get install libzbar-dev
sudo pip install zbar
sudo pip install qrtools

# NOTE!! Still need to do this on AWS Ubuntu 16.04
sudo apt install qrencode

# create folder for payment qrcode images
cd ~/workspace/django/xwjy/test1
mkdir qrcode



#TODO: need a startup systemd for wallet
---------------------
Prepare database
--------------------
mysql -h localhost -u root -p
<login>
under prompt run:

# create database and the django project setting
# will use user mydbuser passwd aaaaaa to connect to it
#
create database mydb character set utf8;
GRANT ALL PRIVILEGES ON mydb.* TO 'mydbuser'@'localhost' IDENTIFIED BY 'aaaaaa';

in Linux prompt
cd ~/workspace/django/xwjy/test1/

# generate sql code to create database talbes based on users/models.py
# TODO: we can certainly change the name of models
#
python manage.py makemigrations users

#
# execute the code generated by makemigration to really create tables
#
python manage.py migrate

python manage.py createsuperuser

#
# TODO: if we finish our code, besides global counter, cryptocurrency,
#       payment_provider and root userlogin tables, nothing is needed
#       to be insert into database.
#
# input initial data for testing
#
# 1. load basic objects such as crypto currency, payment provider, sysop user
python manage.py loaddata sql/init_fixture_oregon.json

# NOTE: this for Oregon on Ubuntu
sudo cp ~/workspace/django/xwjy/test1/install/axfund-django* /etc/systemd/system/
sudo systemctl start axfund-django.service

#
# Preparing wallet
#
#
First, check the ~/workspace/jdango/xwjy/qb/axf.conf, make sure we open the port that axfd wants on AWS security group (usually 19344)
Second, start the wallet 
cd ~/workspace/jdango/xwjy/smwy/src # assume you untar axfd here.
./axfd -datadir=../../qb &
Third, run ./axfd -datadir=../../qb encryptwallet <passphrase>
This one will stop axfd
You need to restart it

Then, go to admin page of the service, change following:
1. axfd password to the passphrase you just set
2. make sure the heepay return IP is right
3. make sure the heepay return port is right
4. provide an email for support and save the change
5. run sudo crontab -e, to add following cronjob
*/3 * * * * curl -v http://localhost/account/cron/update_receive/
*/5 * * * * curl -v http://localhost/account/cron/order_batch_process/
* 8 * * * curl -v http://localhost/account/cron/generate_address/

You can look at the wallet log
tail -f xwjy/qb/debug.log



-----
Optional: install JSON-RPC to talk to wallet

#This is only needed if we use json-rpc talk to wallet
sudo apt install bzr
cd ~/workdir
bzr checkout http://bzr.json-rpc.org/trunk
cd trunk/python-jsonrpc/
python setup.py install


Then the wallet program should work, please don;t use pip install json-rpc or it will break the linkage
----------------
 Login to Aliyun
----------------
ssh -i ~/.ssh/tao-web-hk.pem root@47.52.33.113

--------------
Test address in aliyun
--------------
[
    "AboGeCuvs8U8nGGuoe9awZzhUDHTkuiG4Y",
    "AGqfmz49fVFpdoKRfaw2zN7CikWAhUsYdE",
    "Abvtw2KaFSUdr934YA5dCGuanHugyDT3ov"
]
=======

The old test address for Tao's wallet: AHeeMMr4CqzxFTy3WGRgZnmE5ZoeyiA6vg


------------------------
PHP

sudo apt-get  install lamp-server^ phpmyadmin php-curl

in /etc/php/7.0/apache2/php.ini
Uncomment ";extension=php_curl.dll"

Add "Include /etc/phpmyadmin/apache.conf " into /etc/apache2/apache.conf


#
# Setup admin
#
# create the super user for manage site.
python3 manage.py createsuperuser
# restart server
python3 manage.py runserver

# to login the admin site, open the /admin URL (e.g. http://127.0.0.1:8000/admin) and enter your new superuser userid and password credentials (you'll be redirected to the login page, and then back to the /admin URL after you've entered your details).

AR6mDdxwvZrTRiETfUnx98MHE9kAJ61zxV
